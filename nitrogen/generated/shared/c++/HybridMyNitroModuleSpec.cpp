///
/// HybridMyNitroModuleSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridMyNitroModuleSpec.hpp"

namespace margelo::nitro::mynitromodule {

  void HybridMyNitroModuleSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("sum", &HybridMyNitroModuleSpec::sum);
      prototype.registerHybridMethod("multiply", &HybridMyNitroModuleSpec::multiply);
      prototype.registerHybridMethod("greet", &HybridMyNitroModuleSpec::greet);
      prototype.registerHybridMethod("reverseString", &HybridMyNitroModuleSpec::reverseString);
      prototype.registerHybridMethod("getArraySum", &HybridMyNitroModuleSpec::getArraySum);
      prototype.registerHybridMethod("getDeviceInfo", &HybridMyNitroModuleSpec::getDeviceInfo);
      prototype.registerHybridMethod("delayedGreeting", &HybridMyNitroModuleSpec::delayedGreeting);
      prototype.registerHybridMethod("isEven", &HybridMyNitroModuleSpec::isEven);
    });
  }

} // namespace margelo::nitro::mynitromodule
