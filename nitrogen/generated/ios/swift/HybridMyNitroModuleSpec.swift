///
/// HybridMyNitroModuleSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridMyNitroModuleSpec``
public protocol HybridMyNitroModuleSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func sum(num1: Double, num2: Double) throws -> Double
}

/// See ``HybridMyNitroModuleSpec``
open class HybridMyNitroModuleSpec_base {
  private weak var cxxWrapper: HybridMyNitroModuleSpec_cxx? = nil
  public init() { }
  public func getCxxWrapper() -> HybridMyNitroModuleSpec_cxx {
  #if DEBUG
    guard self is HybridMyNitroModuleSpec else {
      fatalError("`self` is not a `HybridMyNitroModuleSpec`! Did you accidentally inherit from `HybridMyNitroModuleSpec_base` instead of `HybridMyNitroModuleSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridMyNitroModuleSpec_cxx(self as! HybridMyNitroModuleSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the MyNitroModule HybridObject.
 * Implement this protocol to create Swift-based instances of MyNitroModule.
 * ```swift
 * class HybridMyNitroModule : HybridMyNitroModuleSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridMyNitroModuleSpec = HybridMyNitroModuleSpec_protocol & HybridMyNitroModuleSpec_base
